package components

import (
	"github.com/gluek/timetracker/internal/database"
)

templ plannerChart(entries []database.PlannerEntry) {
	@templ.JSONScript("recordData", entries)
	<script type="text/javascript">
    var importData = JSON.parse(document.getElementById('recordData').textContent);
    var dataArray = importData.map((record) => ([record.date, record.type]));
    var activeYear = dataArray[0][0];

    var chartDom = document.getElementById('plannerchart');
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        // dark mode
        var myChart = echarts.init(chartDom, 'dark');
    } else {
        var myChart = echarts.init(chartDom);
    }
    var option;
    option = {
        backgroundColor: "transparent",
        animation: false,
        tooltip: {
            show: false
        },
        visualMap: {
            show: false,
            type: 'piecewise',
            min: 0,
            max: 3,
            splitNumber: 4,
            calculable: false,
            orient: 'vertical',
            left: '670',
            top: 'center',
            inRange: {
                color: ['#d5d8dc', '#2ecc71',  '#f1c40f' , '#808b96']
            },
            outOfRange: {
                color: ['#2ecc71']
            }
        },
        calendar: {
            height: '70%',
            width:'90%',
            cellSize: [40, 40],
            orient: 'horizontal',
            range: '2024',
            splitLine: {
                show: true,
                lineStyle: {
                    width: 3,
                    color: 'rgba(255,255,255,1.0)'
                }
            },
            dayLabel: {
                firstDay: 1
            },
            yearLabel: {
                show: false
            },
            itemStyle: {
                borderWidth: 0.5
            }
        },
        series: {
            type: 'heatmap',
            coordinateSystem: 'calendar',
            label: {
                show: true,
                formatter: function (p) {
                    const format = echarts.time.format(p.data[0], '{dd}', false);
                    return format;
                }
            },
            data: dataArray
        }
        
    };

    async function sendToBackend(params) {
        const url = "/vacation/" + params.value[0]
        const requestOptions = {
            method: 'POST'
        }
        const response = await fetch(url, requestOptions);
        const data =  await response.json();
        option.series.data = data.map((record) => ([record.date, record.type]));
        myChart.setOption(option, true);
    }

    option && myChart.setOption(option);
    myChart.on('click', sendToBackend);
    </script>
}